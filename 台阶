#include<stdio.h>
//递归求台阶 
int taijie(int n){
	if(n==0)
	return 0;
		if(n==1)
	return 1;
		if(n==2)
	return 2;
		if(n>=3)
	return taijie(n-1)+taijie(n-2);
}
int main(){
	int n;
	taijie(n);
	printf("请输入n的值:");
	scanf("%d",&n);
	printf("%d\n",taijie(n));
	return 0;
}//时间复杂度：递归的运算次数呈树展开，因此易知代码的时间复杂度和二叉树的节点个数有关，得到O(2^n)
    //空间复杂度：因为递归没有申请额外空间，所以空间复杂度为O(1)

//递推求台阶
int main(){
	int n;
	printf("please input:");
	scanf("%d",&n);
	int stair[n];
	stair[0]=1;
	stair[1]=2;
	for(int i=2;i<n;i++){

	stair[i]=stair[i-1]+stair[i-2];
}
printf("结果为：%d\n",stair[n-1]);
return 0;
} 
//时间复杂度： 代码执行的次数与n有关，可以得到它的时间复杂度应为O(n)
    //因为没有开辟多的空间，所以空间复杂度为O(1) 
